import LrIco from './LrIco.vue'
import '../../styles/index.scss'
import { ref } from 'vue'

export default {
  title: 'LR UI/LrIco',
  component: LrIco,
  argTypes: {
    onClick: {},
    size: {
      control: { type: 'select' },
      options: ['large', 'small'],
    },
    icoName: {
      control: { type: 'select' },
      options: [
        'add',
        'add_filled',
        'arrow_right',
        'arrow_up',
        'bin',
        'bus',
        'butt',
        'calendar',
        'calendar_heat',
        'car',
        'card',
        'checked',
        'checked_checkbox',
        'chevron_down',
        'chevron_left',
        'chevron_right',
        'chevron_up',
        'city',
        'client',
        'clients',
        'close',
        'close_small',
        'company',
        'copy_link',
        'dashboard',
        'data_table',
        'doc',
        'dollar',
        'done',
        'download',
        'equipment',
        'euro',
        'exit',
        'eye_closed',
        'eye_open',
        'fb',
        'fb_messenger',
        'filter',
        'geography',
        'help',
        'history',
        'hotel',
        'info',
        'info_filled',
        'instagram',
        'knob',
        'knob_fill',
        'like',
        'like_filled',
        'link',
        'lira',
        'list',
        'logo',
        'mail',
        'menu',
        'messages',
        'minus',
        'money',
        'music',
        'new_window',
        'partners',
        'photo',
        'pin',
        'plane',
        'plus',
        'pound',
        'question',
        'question_filled',
        'reply',
        'reset',
        'reset_demo',
        'rouble',
        'search',
        'settings',
        'ship',
        'shopping_cart_clear',
        'speed',
        'statistic',
        'table',
        'table_of_contents',
        'table_split',
        'task_add',
        'telegram',
        'train',
        'travel_mode',
        'twitter',
        'upload',
        'user',
        'users',
        'viber',
        'vk',
        'warning',
        'warning_filled',
        'youtube',
        'color_logo',
        'color_error',
        'rotate_left',
        'rotate_right',
        'resize',
        'crop',
        'zoom_in',
        'zoom_out',
        'compare',
      ],
    },
  },
}

// More on component templates: https://storybook.js.org/docs/vue/writing-stories/introduction#using-args
const Template = args => ({
  // Components used in your story `template` are defined in the `components` object
  components: { LrIco },
  // The story's `args` need to be mapped into the template through the `setup()` method
  setup() {
    const icoName = ref(args.icoName)
    return { args, icoName }
  },
  // And then the `args` are bound to your component with `v-bind="args"`
  template: `<lr-ico :ico-name="icoName" v-bind="args"/>`,
})

export const Large = Template.bind({})
Large.args = {
  size: 'large',
  icoName: 'logo',
}

export const Small = Template.bind({})
Small.args = {
  size: 'small',
  label: 'logo',
  icoName: 'logo',
}
